version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ../interface/backend
      dockerfile: ../docker/backend.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=sqlite:///neurofusion.db
    volumes:
      - ../interface/backend:/app
      - ../data:/app/data
    depends_on:
      - redis
    networks:
      - neurofusion-network

  # Frontend
  frontend:
    build:
      context: ../interface/frontend
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    volumes:
      - ../interface/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - neurofusion-network

  # Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neurofusion-network

  # PostgreSQL para producción (opcional en desarrollo)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=neurofusion
      - POSTGRES_USER=neurofusion_user
      - POSTGRES_PASSWORD=neurofusion_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - neurofusion-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../interface/frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    networks:
      - neurofusion-network

  # Prometheus para monitoreo
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - neurofusion-network

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3100:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - neurofusion-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  neurofusion-network:
    driver: bridge
